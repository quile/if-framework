#!/usr/bin/env perl

# Copyright (c) 2010 - Action Without Borders
#
# MIT License
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# --------------------------------------
# Run all IF unit tests.  This
# >cannot< rely on any IF:: code
# so don't think about including any
# of our standard modules.
# --------------------------------------

use strict;
use Cwd;
use File::Basename;
use Getopt::Long;
use Test::Class;

my $testName = [];
my $debug = 0;
my $silent = 0;
my $noBootstrap = 0;

GetOptions("debug" => \$debug,
        "no-bootstrap" => \$noBootstrap,
        "test-name=s" => $testName,
        "silent" => \$silent);

my $cwd = getcwd;
# There must be a better way to do this:
if ($cwd =~ /qa$/) {
    chdir "..";
}
my $FRAMEWORK_ROOT = getcwd;
use lib 'conf';
use lib 'lib';
use lib 't';

unless ($noBootstrap) {
    # this generates the model, drops and recreates
    # the tables, and creates the model classes
    system("perl t/bootstrap.pl");
}

# Test::Class subclasses go here

use IFTest::Classes;

Test::Class->runtests;
