# Copyright (c) 2010 - Action Without Borders
#
# MIT License
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

#
{
	inheritsFrom => "IF::Component::URL",
	HIDDEN_KEY_VALUE => {
		type => "HiddenField",
		bindings => {
			name => q(aKeyValuePair.NAME),
			value => q(aKeyValuePair.VALUE),
		},
	},
	TAG_ATTRIBUTES => {
		type => "ATTRIBUTES",
	},
	CONTENT => {
		type => "CONTENT",
	},
	METHOD => {
		type => "STRING",
		value => q(method),
	},
	ENC_TYPE => {
		type => "STRING",
		value => q(encType),
	},
	HAS_ENC_TYPE => {
		type => "BOOLEAN",
		value => q(encType),
	},
	SHOULD_ENABLE_CLIENT_SIDE_SCRIPTING => {
		type => "BOOLEAN",
		value => q(shouldEnableClientSideScripting),
	},
	IS_FIRST_TIME_RENDERED => {
		type => "BOOLEAN",
		value => q(isFirstTimeRendered),
	},
	FORM_NAME => {
		type => "STRING",
		value => q(formName),
	},
    UNIQUE_ID => {
        type => "STRING",
        value => q(uniqueId),
    },
	JAVASCRIPT_ROOT => {
		type => "STRING",
		value => q(application.systemConfigurationValueForKey("JAVASCRIPT_ROOT")),
	},
	PARENT_BINDING_NAME => {
		type => "STRING",
		value => q(nestedBindingPath),
	},
	CAN_ONLY_BE_SUBMITTED_ONCE => {
		type => "STRING",
		value => q(canOnlyBeSubmittedOnce),
	},
	HAS_VALIDATION_ERROR_MESSAGES => {
		type => "BOOLEAN",
#		value => q(validationErrorMessages.#),
		value => q("keys %$self->validationErrorMessages()"),
	},
	VALIDATION_ERROR_MESSAGES => {
		type => "LOOP",
		list => q(validationErrorMessagesArray),
		item => "aMessage",
	},
	A_VALIDATION_ERROR_MESSAGE_TEXT => {
		type => "STRING",
		value => q(aMessage.value),
	},
	A_VALIDATION_ERROR_MESSAGE_KEY => {
		type => "STRING",
		value => q(aMessage.key),
	},
}
