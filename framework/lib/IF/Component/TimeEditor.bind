# Copyright (c) 2010 - Action Without Borders
#
# MIT License
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# bindings for the TimeEditor component
{
	IS_TWENTY_FOUR_HOUR => {
		type => "BOOLEAN",
		value => q($self->isTwentyFourHour()),
	},
	HOURS => {
		type => "Selection",
		bindings => {
			NAME => q("SHH_".$self->name()),
			SELECTED_VALUES => q([ $self->startsEmpty()? "" : $self->hours() ]),
			LIST => q( $self->hoursForSelection() ),
		},
	},
	MINUTES => {
		type => "Selection",
		bindings => {
			NAME => q("SMM_".$self->name()),
			SELECTED_VALUES => q([ $self->startsEmpty()? "" : $self->minutes() ]),
			LIST => q( $self->minutesForSelection() ),
		},
	},
	SECONDS => {
		type => "Selection",
		bindings => {
			NAME => q("SSS_".$self->name()),
			SELECTED_VALUES => q([ $self->startsEmpty()? "" : $self->seconds() ]),
			LIST => q( $self->allowsNoSelection() ? ["", map {sprintf("%02d", $_)} (0..59)] : [map {sprintf("%02d", $_)} (0..59)]),
		},
	},
	AM_PM => {
		type => "Selection",
		bindings => {
			NAME => q("SAP_".$self->name()),
			SELECTED_VALUES => q([ $self->startsEmpty()? "" : $self->ampm() ]),
			LIST => q( $self->allowsNoSelection() ? ["", "am", "pm"] : ["am", "pm"]),
		},
	},
	SHOW_SECONDS => {
		type => "BOOLEAN",
		value => q($self->showSeconds()),
	},
	IS_FIRST_TIME_LOADED => {
		type => "BOOLEAN",
		value => q(isFirstTimeLoaded),
	},
	CURRENT_HOUR => {
		type => "STRING",
		value => q(currentHour),
	},
	CURRENT_MINUTE => {
		type => "STRING",
		value => q(currentMinute),
	},
	CURRENT_SECOND => {
		type => "STRING",
		value => q(currentSecond),
	},
	CURRENT_AM_PM => {
		type => "STRING",
		value => q(currentAmPm),
	},
	SHOULD_SHOW_NOW_LINK => {
		type => "BOOLEAN",
		value => q(shouldShowNowLink),
	},
	NAME => {
		type => "STRING",
		value => q(name),
	},
}
