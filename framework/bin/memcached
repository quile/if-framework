#!/usr/bin/env perl

# Copyright (c) 2010 - Action Without Borders
#
# MIT License
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

use lib qw(lib conf bin);

use strict;
use IF::Application;
use Getopt::Long;
use AppControl::Utility;

my $application;
my $DEBUG;

#my $result = GetOptions("application=s" => \$application, "debug" => \$DEBUG);
my $result = GetOptions("debug" => \$DEBUG);

#die "You must specify an --application on the command line" unless ($result && $application);

#my (undef, $appRoot, $appConfigClassName) = AppControl::Utility::loadApplication($application);

my $memcachedPath = IF::Application->systemConfigurationValueForKey("MEMCACHED_PATH");
my $memcachedPort = IF::Application->systemConfigurationValueForKey("MEMCACHED_PORT");
my $memcachedSize = IF::Application->systemConfigurationValueForKey("MEMCACHED_SIZE");
my $memcachedPid  = IF::Application->systemConfigurationValueForKey("MEMCACHED_PID");

my $args = "-p $memcachedPort -m $memcachedSize";

if ($DEBUG) {
	$args .= " -vv";
} else {
	$args .= " -d -P $memcachedPid ";
}

$args .= ' -u '.getlogin() unless $>;

print STDERR "$memcachedPath $args\n" if $DEBUG;

if ($DEBUG) {
	system("$memcachedPath $args");
} else {
	print `$memcachedPath $args`;
}

exit;
