#!/usr/bin/env perl

# Copyright (c) 2010 - Action Without Borders
#
# MIT License
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

use lib qw(. lib conf bin);

use strict;
use AppControl::Utility;
use Getopt::Long;
use Test::Class;

BEGIN {
    my $application;
    my $appConfigPath;
    my $testName;
    my $debug;

    GetOptions("application=s" => \$application,
               "app-config-path=s" => \$appConfigPath,
               "debug" => \$debug,
               "test-name=s" => \$testName,
               );

    unless ($application) {
        usage();
    }

    # load app config:
    my $appConfigClassName = AppControl::Utility::loadAppConfig($application, $appConfigPath);

    no strict 'refs';
    my $appRoot = ${$appConfigClassName."::APP_ROOT"};
    $application ||= ${$appConfigClassName."::APP_NAME"};

    die "No app root specified" unless $appRoot;

    # Load the app class
    use lib '$appRoot';
    eval "use ".$application."::Application;";
    die $@ if $@;

    if ($debug) {
        IF::Log::setLogMask(0xffff);
    }

    # find the tests for that module and run them:

    eval "use Test::Class::Load q($appRoot/t);";
    die $@ if $@;
}

Test::Class->runtests;

#----------------------------------------------
sub usage {
    print <<EOU
usage: runAllTests --application=Foo [--test-name=Name] [--debug]
EOU
    ;
    exit(1);
}

